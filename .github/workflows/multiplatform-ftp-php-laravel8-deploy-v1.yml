# TODO: maybe make one for update (only copy the files).
# TODO: condition to secrets.FRONTEND_FTP_ADDRESS existing.
name: SyncSystem - Multiplatform - FTP Pipeline For PHP/Laravel 8 - Deploy

on:
    push:
        branches:
            - main
# TODO: condition to staging/QA deploy success (including E2E test).

jobs:
    deploy:
        runs-on: ubuntu-latest
            # TODO: evaluate replacing with variable.

        # Set minimum environment variables for composer install to execute - Shared (Frontend/Backend)
            # Deploy action: replace ***APP_NAME: '${{ secrets.APP_NAME }}'*** with the output from the devops/environment-variables-remote-set.js execution (more then 70 lines).
        env: 
            APP_NAME: '${{ secrets.APP_NAME }}'
            
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2

            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: '8.0'

            - name: Install lftp
              # lftp command is not available in the GitHub Actions runner environment by default.
              run: sudo apt-get install lftp -y
              shell: bash

            # - name: Install/setup nvm, node, npm 
            #   run: sudo apt-get install lftp -y

            # TODO: test npm install for laravel dependencies.
            # Note: must be in the directory from the package.json
            # - name: Setup Node.js
            #   uses: actions/setup-node@v3
            #   with:
            #     node-version: 18

            # - name: Install npm
            #   run: npm install -g npm@latest

            # - name: Install project dependencies
            #   run: npm install

            # - name: Switch Directory
            #  run: cd syncsystem-laravel8-v1

            # - name: Set Environment Variables - Shared (Frontend/Backend)
            #   working-directory: ./syncsystem-laravel8-v1
            #   env: 
            #     CONFIG_DIRECTORY_FILES: ${{ secrets.CONFIG_DIRECTORY_FILES }}
            #     CONFIG_DIRECTORY_FILES_LAYOUT: ${{ secrets.CONFIG_DIRECTORY_FILES_LAYOUT }}
            #     CONFIG_DIRECTORY_FONTS: ${{ secrets.CONFIG_DIRECTORY_FONTS }}
            #     CONFIG_DIRECTORY_RESOURCES: ${{ secrets.CONFIG_DIRECTORY_RESOURCES }}
            #     CONFIG_DIRECTORY_STYLES: ${{ secrets.CONFIG_DIRECTORY_STYLES }}
            #     CONFIG_DIRECTORY_JS: ${{ secrets.CONFIG_DIRECTORY_JS }}
            #     CONFIG_DIRECTORY_VIEWS: ${{ secrets.CONFIG_DIRECTORY_VIEWS }}
            #     CONFIG_DIRECTORY_BUILD_LARAVEL: ${{ secrets.CONFIG_DIRECTORY_BUILD_LARAVEL }}
      
            #     CONFIG_DIRECTORY_FILES_SD: ${{ secrets.CONFIG_DIRECTORY_FILES_SD }}
            #     CONFIG_DIRECTORY_FILES_LAYOUT_SD: ${{ secrets.CONFIG_DIRECTORY_FILES_LAYOUT_SD }}
            #     CONFIG_DIRECTORY_FONTS_SD: ${{ secrets.CONFIG_DIRECTORY_FONTS_SD }}
            #     CONFIG_DIRECTORY_STYLES_SD: ${{ secrets.CONFIG_DIRECTORY_STYLES_SD }}
            #     CONFIG_DIRECTORY_JS_SD: ${{ secrets.CONFIG_DIRECTORY_JS_SD }}
            #   run: |

            # - name: Debug - check environment variables
            #   working-directory: ./syncsystem-laravel8-v1
            #   run: printenv
              # run: | 
              #   printenv CONFIG_DIRECTORY_FILES
              #   printenv CONFIG_DIRECTORY_FILES_LAYOUT
              #   printenv CONFIG_DIRECTORY_FONTS
              #   printenv CONFIG_DIRECTORY_RESOURCES
              #   printenv CONFIG_DIRECTORY_STYLES
              #   printenv CONFIG_DIRECTORY_JS
              #   printenv CONFIG_DIRECTORY_VIEWS
              #   printenv CONFIG_DIRECTORY_BUILD_LARAVEL

              #   printenv CONFIG_DIRECTORY_FILES_SD
              #   printenv CONFIG_DIRECTORY_FILES_LAYOUT_SD
              #   printenv CONFIG_DIRECTORY_FONTS_SD
              #   printenv CONFIG_DIRECTORY_STYLES_SD
              #   printenv CONFIG_DIRECTORY_JS_SD

            - name: Install Composer Dependencies
              working-directory: ./syncsystem-laravel8-v1
              run: |
                composer install
              shell: bash
            # php artisan vendor:publish --provider="Laravel\Sanctum\SanctumServiceProvider"
            # php artisan migrate

            - name: Sanctum Register Package and Migrate
              working-directory: ./syncsystem-laravel8-v1
              run: |
                php artisan vendor:publish --provider="Laravel\Sanctum\SanctumServiceProvider"
                php artisan migrate
              shell: bash
            # Caution: DB server must allow access from github runner (check server DB restrictions).

            # Run node scrips.
            # TODO: generate CSS / javascript files

            # Laravel framework deploy.
            # TODO: delete this directory syncsystem-laravel8-v1 that is also uploading to the server (double check - maybe was in the poc phase).
            - name: Deploy FTP - Backend
              working-directory: ./syncsystem-laravel8-v1
              # run: |
              #   lftp -c "
              #     set ftp:ssl-allow no;
              #     open -u ${{ secrets.BACKEND_FTP_USERNAME }},${{ secrets.BACKEND_FTP_PASSWORD }} ${{ secrets.BACKEND_FTP_ADDRESS }};
              #     mirror -R -e -x .git/ --ignore-time --parallel=10 --exclude-glob .git* --exclude .github/ ./ /www/html/laravel8
              #   "
              #   # replace path with variable
              #   # TODO: evaluate creating special FTP user for automated deploy
              #   # Note: //www/html/laravel8 was updated to /www/html/laravel8

              run: |
                lftp -c "
                  set ftp:ssl-allow no;
                  open -u ${{ secrets.BACKEND_FTP_USERNAME }},${{ secrets.BACKEND_FTP_PASSWORD }} ${{ secrets.BACKEND_FTP_ADDRESS }};
                  mirror -R -e -x .git/ --ignore-time --parallel=10 \
                    --exclude-glob .git* \
                    --exclude .git/ \
                    --exclude .github/ \
                    --exclude public/ \
                    ./ /www/html/laravel8
                "
              shell: bash

            - name: Deploy FTP - Frontend
              working-directory: ./syncsystem-laravel8-v1
              run: |
                lftp -c "
                  set ftp:ssl-allow no;
                  open -u ${{ secrets.FRONTEND_FTP_USERNAME }},${{ secrets.FRONTEND_FTP_PASSWORD }} ${{ secrets.FRONTEND_FTP_ADDRESS }};
                  mirror -R -e -x .git/ --ignore-time --parallel=10 \
                    --exclude-glob .git* \
                    --exclude .git/ \
                    --exclude .github/ \
                    --exclude public/ \
                    ./ /www/html/laravel8
                "
              shell: bash
            # Public directory deploy.
            # TODO: check why .git is being uploaded.
            # Exclude directories that will be created by symlinks.
            - name: Deploy FTP - Backend - Public
              working-directory: ./syncsystem-laravel8-v1/public
              run: |
                    lftp -c "
                    set ftp:ssl-allow no;
                    open -u ${{ secrets.BACKEND_FTP_USERNAME }},${{ secrets.BACKEND_FTP_PASSWORD }} ${{ secrets.BACKEND_FTP_ADDRESS }};
                    mirror -R --reverse --only-newer --parallel=10 \
                    --exclude-glob .git* \
                    --exclude .github/ \
                    --exclude ${{ secrets.CONFIG_DIRECTORY_FILES_SD }}/ \
                    --exclude ${{ secrets.CONFIG_DIRECTORY_FILES_LAYOUT_SD }}/ \
                    --exclude ${{ secrets.CONFIG_DIRECTORY_FONTS_SD }}/ \
                    ./ /www/html
                    "
              shell: bash
            # --parallel=10

            - name: Deploy FTP - Frontend - Public
              working-directory: ./syncsystem-laravel8-v1/public
              run: |
                    lftp -c "
                    set ftp:ssl-allow no;
                    open -u ${{ secrets.FRONTEND_FTP_USERNAME }},${{ secrets.FRONTEND_FTP_PASSWORD }} ${{ secrets.FRONTEND_FTP_ADDRESS }};
                    mirror -R --reverse --only-newer --parallel=10 \
                    --exclude-glob .git* \
                    --exclude .github/ \
                    --exclude ${{ secrets.CONFIG_DIRECTORY_FILES_SD }}/ \
                    --exclude ${{ secrets.CONFIG_DIRECTORY_FILES_LAYOUT_SD }}/ \
                    --exclude ${{ secrets.CONFIG_DIRECTORY_FONTS_SD }}/ \
                    ./ /www/html
                    "
              shell: bash

            - name: Access server and download .htaccess and index.php (Backend)
              run: |
                lftp -e "set ssl:verify-certificate no; \
                open -u ${{ secrets.BACKEND_FTP_USERNAME }},${{ secrets.BACKEND_FTP_PASSWORD }} ${{ secrets.BACKEND_FTP_ADDRESS }}; \
                cd /www/html; \
                get .htaccess; \
                get index.php; \
                set xfer:clobber true; \
                quit"
              shell: bash
            # TODO: test and evaluate if need to change local runner directory so there's no mix up.

            - name: Delete SetEnv lines from .htaccess (Backend)
              run: |
                htaccessFile=".htaccess"
                sed -i '/^SetEnv/d' "$htaccessFile"
              shell: bash

            # Note: double check spaces after each line. Might cause error in GitHub actions.
            # Deploy action: replace ***echo "SetEnv APP_NAME '${{ secrets.APP_NAME }}'" >> .htaccess; \*** with the output from the devops/environment-variables-remote-set.js execution (more then 70 lines).
            - name: Upate .htaccess locally (Backend)
              run: |
                echo "SetEnv APP_NAME '${{ secrets.APP_NAME }}'" >> .htaccess; \
              shell: bash

            - name: Update public index.php locally (Backend)
              run: |
                sed -i -e 's|/../storage/framework/maintenance.php|${{ secrets.LARAVEL_PUBLIC_INDEX_PATH_STORAGE_MAINTENANCE }}|' \
                       -e 's|/../vendor/autoload.php|${{ secrets.LARAVEL_PUBLIC_INDEX_PATH_AUTOLOAD }}|' \
                       -e 's|/../bootstrap/app.php|${{ secrets.LARAVEL_PUBLIC_INDEX_PATH_BOOTSTRAP }}|' index.php
              shell: bash

            - name: Upload modified .htaccess and index.php (Backend)
              run: |
                lftp -c "
                  set ftp:ssl-allow no; \
                  open -u ${{ secrets.BACKEND_FTP_USERNAME }},${{ secrets.BACKEND_FTP_PASSWORD }} ${{ secrets.BACKEND_FTP_ADDRESS }}; \
                  mirror -R --reverse --only-newer --parallel=10 --exclude-glob .git* \
                  --exclude .github/ \
                  ./ /www/html
                  quit
                "
              shell: bash
            # mirror -R --reverse --only-newer --parallel=10 --exclude-glob .git* --exclude .github/ ./ /www/html
            
            - name: Access server and download .htaccess and index.php (Frontend)
              run: |
                lftp -e "set ssl:verify-certificate no; \
                open -u ${{ secrets.FRONTEND_FTP_USERNAME }},${{ secrets.FRONTEND_FTP_PASSWORD }} ${{ secrets.FRONTEND_FTP_ADDRESS }}; \
                cd /www/html; \
                set xfer:clobber true; \
                get .htaccess; \
                get index.php; \
                quit"
              shell: bash

            - name: Delete SetEnv lines from .htaccess (Frontend)
              run: |
                htaccessFile=".htaccess"
                sed -i '/^SetEnv/d' "$htaccessFile"
              shell: bash

            # Note: double check spaces after each line. Might cause error in GitHub actions.
            # Deploy action: replace ***echo "SetEnv APP_NAME '${{ secrets.APP_NAME }}'" >> .htaccess; \*** with the output from the devops/environment-variables-remote-set.js execution (more then 70 lines).
            - name: Update .htaccess locally (Frontend)
              run: |
                echo "SetEnv APP_NAME '${{ secrets.APP_NAME }}'" >> .htaccess; \
              shell: bash

            - name: Update public index.php locally (Frontend)
              run: |
                sed -i -e 's|/../storage/framework/maintenance.php|${{ secrets.LARAVEL_PUBLIC_INDEX_PATH_STORAGE_MAINTENANCE }}|' \
                       -e 's|/../vendor/autoload.php|${{ secrets.LARAVEL_PUBLIC_INDEX_PATH_AUTOLOAD }}|' \
                       -e 's|/../bootstrap/app.php|${{ secrets.LARAVEL_PUBLIC_INDEX_PATH_BOOTSTRAP }}|' index.php
              shell: bash

            - name: Upload modified .htaccess and index.php (Frontend)
              run: |
                lftp -c "
                  set ftp:ssl-allow no; \
                  open -u ${{ secrets.FRONTEND_FTP_USERNAME }},${{ secrets.FRONTEND_FTP_PASSWORD }} ${{ secrets.FRONTEND_FTP_ADDRESS }}; \
                  mirror -R --reverse --only-newer --parallel=10 --exclude-glob .git* \
                  --exclude .github/ \
                  ./ /www/html
                  quit
                "
              shell: bash

            - name: Deploy Follow-up Actions (backend)
              run: |
                status_code=$(curl --write-out "%{http_code}" --silent --output /dev/null https://${{ secrets.BACKEND_FTP_ADDRESS }}/system/setup/)
                if [[ "$status_code" -ne 200 ]] ; then
                    echo "Deploy Follow-up Actions Error - Debug and Check Steps/Log"
                    exit 1
                else
                    echo "Deploy Follow-up Actions Successful"
                    echo "Content:"
                    curl --silent https://${{ secrets.BACKEND_FTP_ADDRESS }}/system/setup/
                fi

            - name: Deploy Follow-up Actions (frontend)
              run: |
                status_code=$(curl --write-out "%{http_code}" --silent --output /dev/null https://${{ secrets.FRONTEND_FTP_ADDRESS }}/system/setup/)
                if [[ "$status_code" -ne 200 ]] ; then
                    echo "Deploy Follow-up Actions Error - Debug and Check Steps/Log"
                    exit 1
                else
                    echo "Deploy Follow-up Actions Successful"
                    echo "Content:"
                    curl --silent https://${{ secrets.FRONTEND_FTP_ADDRESS }}/system/setup/
                fi



        # Add a conditional statement to run only on merged pull requests
        if: |
          github.event_name == 'pull_request' && 
          github.event.action == 'closed' && 
          github.event.pull_request.merged == true &&
          contains(github.event.pull_request.labels.*.name, 'deploy-full')
        # Note: last line is condition for pull request to contain a label called 'deploy-full'.
        # TODO: test it.

        # Evaluate if it's necessary to set directories write permissions.
            
        # Access setup URL to complete deploy configuration (DB, symlinks).
